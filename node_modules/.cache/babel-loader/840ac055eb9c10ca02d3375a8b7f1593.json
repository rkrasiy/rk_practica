{"ast":null,"code":"export const checkValidaty = (value, rules) => {\n  let isValid = true;\n  if (rules.required) isValid = value.trim() !== \"\" && isValid;\n  if (rules.minLength) isValid = value.length >= rules.minLength && isValid;\n  if (rules.maxLength) isValid = value.length <= rules.maxLength && isValid;\n\n  if (rules.isEmail) {\n    const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isNumber) isValid = !isNaN(rules.isNumber) && isValid;\n  return isValid;\n};\nexport const inputChangedHandler = (controls, controlName, value) => {\n  const updateControls = { ...controls,\n    [controlName]: { ...controls[controlName],\n      value: value,\n      valid: checkValidaty(value, controls[controlName].validation),\n      touched: true\n    }\n  };\n  return updateControls;\n};\nexport const clearInputs = controls => {\n  const clearedInputs = { ...controls\n  };\n\n  for (let key in clearedInputs) {\n    clearedInputs[key].value = \"\";\n    clearedInputs[key].touched = false;\n  }\n\n  return clearedInputs;\n};","map":{"version":3,"sources":["/var/www/html/rk_practica/src/store/form.js"],"names":["checkValidaty","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","pattern","test","isNumber","isNaN","inputChangedHandler","controls","controlName","updateControls","valid","validation","touched","clearInputs","clearedInputs","key"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAAEC,KAAF,EAASC,KAAT,KAAoB;AAC/C,MAAIC,OAAO,GAAG,IAAd;AACA,MAAGD,KAAK,CAACE,QAAT,EAAmBD,OAAO,GAAGF,KAAK,CAACI,IAAN,OAAiB,EAAjB,IAAuBF,OAAjC;AACnB,MAAGD,KAAK,CAACI,SAAT,EAAoBH,OAAO,GAAGF,KAAK,CAACM,MAAN,IAAgBL,KAAK,CAACI,SAAtB,IAAmCH,OAA7C;AACpB,MAAGD,KAAK,CAACM,SAAT,EAAoBL,OAAO,GAAGF,KAAK,CAACM,MAAN,IAAgBL,KAAK,CAACM,SAAtB,IAAmCL,OAA7C;;AACpB,MAAGD,KAAK,CAACO,OAAT,EAAiB;AACb,UAAMC,OAAO,GAAG,sEAAhB;AACAP,IAAAA,OAAO,GAAGO,OAAO,CAACC,IAAR,CAAaV,KAAb,KAAuBE,OAAjC;AACH;;AACD,MAAGD,KAAK,CAACU,QAAT,EAAmBT,OAAO,GAAG,CAACU,KAAK,CAACX,KAAK,CAACU,QAAP,CAAN,IAA2BT,OAArC;AAEnB,SAAOA,OAAP;AACD,CAZM;AAcP,OAAO,MAAMW,mBAAmB,GAAG,CAACC,QAAD,EAAWC,WAAX,EAAwBf,KAAxB,KAAmC;AACpE,QAAMgB,cAAc,GAAG,EACnB,GAAGF,QADgB;AAEnB,KAACC,WAAD,GAAe,EACX,GAAGD,QAAQ,CAACC,WAAD,CADA;AAEXf,MAAAA,KAAK,EAAEA,KAFI;AAGXiB,MAAAA,KAAK,EAAElB,aAAa,CAACC,KAAD,EAAQc,QAAQ,CAACC,WAAD,CAAR,CAAsBG,UAA9B,CAHT;AAIXC,MAAAA,OAAO,EAAE;AAJE;AAFI,GAAvB;AASA,SAAOH,cAAP;AACD,CAXM;AAaP,OAAO,MAAMI,WAAW,GAAIN,QAAD,IAAa;AACtC,QAAMO,aAAa,GAAG,EAAC,GAAGP;AAAJ,GAAtB;;AACA,OAAI,IAAIQ,GAAR,IAAeD,aAAf,EAA6B;AAC3BA,IAAAA,aAAa,CAACC,GAAD,CAAb,CAAmBtB,KAAnB,GAA2B,EAA3B;AACAqB,IAAAA,aAAa,CAACC,GAAD,CAAb,CAAmBH,OAAnB,GAA6B,KAA7B;AACD;;AACD,SAAQE,aAAR;AACD,CAPM","sourcesContent":["export const checkValidaty = ( value, rules ) => {\n  let isValid = true;\n  if(rules.required) isValid = value.trim() !== \"\" && isValid;\n  if(rules.minLength) isValid = value.length >= rules.minLength && isValid\n  if(rules.maxLength) isValid = value.length <= rules.maxLength && isValid\n  if(rules.isEmail){\n      const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n      isValid = pattern.test(value) && isValid\n  }\n  if(rules.isNumber) isValid = !isNaN(rules.isNumber)  && isValid\n\n  return isValid\n}\n\nexport const inputChangedHandler = (controls, controlName, value ) => {\n  const updateControls = {\n      ...controls,\n      [controlName]: {\n          ...controls[controlName],\n          value: value,\n          valid: checkValidaty(value, controls[controlName].validation),\n          touched: true\n      }\n  }\n  return updateControls\n}\n\nexport const clearInputs = (controls) =>{\n  const clearedInputs = {...controls}\n  for(let key in clearedInputs){\n    clearedInputs[key].value = \"\"\n    clearedInputs[key].touched = false\n  }\n  return  clearedInputs\n}"]},"metadata":{},"sourceType":"module"}