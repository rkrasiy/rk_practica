{"ast":null,"code":"var _jsxFileName = \"/var/www/html/rk_practica/src/components/Input/Input.js\";\nimport React from 'react';\nimport \"./Input.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst input = props => {\n  let inputElement = null;\n  const inputClasses = [\"rk-input\"];\n  if (props.invalid && props.shouldValidate && props.touched) inputClasses.push(\"invalid\");\n\n  switch (props.elementtype) {\n    case 'input':\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", {\n        className: inputClasses.join(\" \"),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'textarea':\n      inputElement = /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: inputClasses.join(\" \"),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'select':\n      inputElement = /*#__PURE__*/_jsxDEV(\"select\", {\n        className: inputClasses.join(\" \"),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed,\n        children: props.elementConfig.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.displayValue\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 28\n      }, this);\n      break;\n\n    default:\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", {\n        className: inputClasses.join(\" \"),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 28\n      }, this);\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Input\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), inputElement]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\nexport default input;","map":{"version":3,"sources":["/var/www/html/rk_practica/src/components/Input/Input.js"],"names":["React","input","props","inputElement","inputClasses","invalid","shouldValidate","touched","push","elementtype","join","elementConfig","value","changed","options","map","option","displayValue","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,MAAIC,YAAY,GAAG,IAAnB;AACA,QAAMC,YAAY,GAAG,CAAC,UAAD,CAArB;AAEA,MAAGF,KAAK,CAACG,OAAN,IAAiBH,KAAK,CAACI,cAAvB,IAAyCJ,KAAK,CAACK,OAAlD,EACIH,YAAY,CAACI,IAAb,CAAkB,SAAlB;;AAEJ,UAAON,KAAK,CAACO,WAAb;AACI,SAAM,OAAN;AACIN,MAAAA,YAAY,gBAAG;AACf,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADI;AAAA,WAEXR,KAAK,CAACS,aAFK;AAGf,QAAA,KAAK,EAAET,KAAK,CAACU,KAHE;AAIf,QAAA,QAAQ,EAAEV,KAAK,CAACW;AAJD;AAAA;AAAA;AAAA;AAAA,cAAf;AAKA;;AACJ,SAAM,UAAN;AACIV,MAAAA,YAAY,gBAAG;AACf,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADI;AAAA,WAEXR,KAAK,CAACS,aAFK;AAGf,QAAA,KAAK,EAAET,KAAK,CAACU,KAHE;AAIf,QAAA,QAAQ,EAAEV,KAAK,CAACW;AAJD;AAAA;AAAA;AAAA;AAAA,cAAf;AAKA;;AACJ,SAAM,QAAN;AACIV,MAAAA,YAAY,gBAAG;AACf,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADI;AAAA,WAEPR,KAAK,CAACS,aAFC;AAGX,QAAA,KAAK,EAAET,KAAK,CAACU,KAHF;AAIX,QAAA,QAAQ,EAAEV,KAAK,CAACW,OAJL;AAAA,kBAKNX,KAAK,CAACS,aAAN,CAAoBG,OAApB,CAA4BC,GAA5B,CAAgCC,MAAM,iBACnC;AAEA,UAAA,KAAK,EAAEA,MAAM,CAACJ,KAFd;AAAA,oBAGKI,MAAM,CAACC;AAHZ,WACKD,MAAM,CAACJ,KADZ;AAAA;AAAA;AAAA;AAAA,gBADH;AALM;AAAA;AAAA;AAAA;AAAA,cAAf;AAaA;;AACJ;AACIT,MAAAA,YAAY,gBAAG;AACf,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADI;AAAA,WAEXR,KAAK,CAACS,aAFK;AAGf,QAAA,KAAK,EAAET,KAAK,CAACU,KAHE;AAIf,QAAA,QAAQ,EAAEV,KAAK,CAACW;AAJD;AAAA;AAAA;AAAA;AAAA,cAAf;AAKA;AApCR;;AAsCA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAA,gBAAQX,KAAK,CAACgB;AAAd;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKf,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAnDD;;AAqDA,eAAeF,KAAf","sourcesContent":["import React from 'react';\nimport \"./Input.css\";\n\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses = [\"rk-input\"]\n    \n    if(props.invalid && props.shouldValidate && props.touched)\n        inputClasses.push(\"invalid\")\n \n    switch(props.elementtype){\n        case ('input'):\n            inputElement = <input \n            className={inputClasses.join(\" \")}\n            {...props.elementConfig} \n            value={props.value}\n            onChange={props.changed}/>\n            break;\n        case ('textarea'):\n            inputElement = <textarea \n            className={inputClasses.join(\" \")}\n            {...props.elementConfig}\n            value={props.value}\n            onChange={props.changed}/>\n            break;\n        case ('select'):\n            inputElement = <select \n            className={inputClasses.join(\" \")}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option \n                        key={option.value} \n                        value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            break;\n        default:\n            inputElement = <input \n            className={inputClasses.join(\" \")}\n            {...props.elementConfig}\n            value={props.value}\n            onChange={props.changed}/>\n            break;\n    }\n    return(\n        <div className=\"Input\">\n            <label>{props.label}</label>\n            {inputElement}\n        </div>\n    )\n}\n\nexport default input"]},"metadata":{},"sourceType":"module"}