{"ast":null,"code":"import * as actionTypes from \"./actions\";\nconst initialState = {\n  clients: {\n    name: \"\",\n    last_name: \"\",\n    email: \"\",\n    phone_number: \"\"\n  },\n  formIsValid: false,\n  personId: null\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGEDIENT:\n      return { ...state,\n        clientes: { ...state.clients,\n          [action.clientsId]: state.clients[action.clientsId]\n        }\n      };\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return { ...state,\n        clientes: { ...state.clients,\n          [action.clientsId]: state.clients[action.clientsId]\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/var/www/html/rk_practica/src/store/reducer.js"],"names":["actionTypes","initialState","clients","name","last_name","email","phone_number","formIsValid","personId","reducer","state","action","type","ADD_INGEDIENT","clientes","clientsId","REMOVE_INGREDIENT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,WAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,EADC;AAEPC,IAAAA,SAAS,EAAE,EAFJ;AAGPC,IAAAA,KAAK,EAAE,EAHA;AAIPC,IAAAA,YAAY,EAAE;AAJP,GADU;AAOnBC,EAAAA,WAAW,EAAE,KAPM;AAQnBC,EAAAA,QAAQ,EAAE;AARS,CAArB;;AAWA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAiC;AAC/C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKZ,WAAW,CAACa,aAAjB;AACE,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,QAAQ,EAAE,EACR,GAAGJ,KAAK,CAACR,OADD;AAER,WAACS,MAAM,CAACI,SAAR,GAAoBL,KAAK,CAACR,OAAN,CAAcS,MAAM,CAACI,SAArB;AAFZ;AAFL,OAAP;;AAOF,SAAKf,WAAW,CAACgB,iBAAjB;AACE,aAAO,EACL,GAAGN,KADE;AAELI,QAAAA,QAAQ,EAAE,EACR,GAAGJ,KAAK,CAACR,OADD;AAER,WAACS,MAAM,CAACI,SAAR,GAAoBL,KAAK,CAACR,OAAN,CAAcS,MAAM,CAACI,SAArB;AAFZ;AAFL,OAAP;;AAOF;AACE,aAAOL,KAAP;AAlBJ;AAoBD,CArBD;;AAsBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"./actions\";\n\nconst initialState = {\n  clients: {\n    name: \"\",\n    last_name: \"\",\n    email: \"\",\n    phone_number: \"\"\n  },\n  formIsValid: false,\n  personId: null\n}\n\nconst reducer = (state = initialState, action) =>{\n  switch(action.type){\n    case actionTypes.ADD_INGEDIENT:\n      return {\n        ...state,\n        clientes: {\n          ...state.clients,\n          [action.clientsId]: state.clients[action.clientsId]\n        }\n      };\n    case actionTypes.REMOVE_INGREDIENT:\n      return {\n        ...state,\n        clientes: {\n          ...state.clients,\n          [action.clientsId]: state.clients[action.clientsId]\n        }\n      }\n    default:\n      return state;\n  }\n}\nexport default reducer"]},"metadata":{},"sourceType":"module"}